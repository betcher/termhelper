#!/bin/bash
GREP="grep -i" # default grep with a parameters to find help sections, it may be "agrep, egrep etc". 
export TEXTDOMAIN="termhelper"
export TEXTDOMAINDIR="/usr/share/locale"
MSG01="$(gettext -s "matches several subsections")"
MSG02="$(gettext -s "not found")"
MSG03="$(gettext -s "Hi! Today is")"
MSG04="$(gettext -s "Subsections")"

black='\033[0;30m' 
red='\033[0;31m' 
green='\033[0;32m' 
yellow='\033[1;33m' 
brown='\033[0;33m'
blue='\033[0;34m' 
light_blue='\033[1;34m'
magenta='\033[1;35m'
cyan='\033[0;36m'
white='\033[0;37m' 
purple='\033[0;35m'
default='\033[0m'

mark_color=green    # color of second column
def_color=default   # default text color
separ=' '			# columns separator (space, '_', '.')
column_width=50		# width of first column
header_width=60		# heade width

= () { 
	color=$1
	eval echo -en "\$$color"	
}
= default

prefix=$(echo $LANG |cut -f1 -d _)
HELPDIR=/usr/share/termhelper/$prefix
[ -d ./helps/$prefix ] && HELPDIR=./helps/$prefix 		# for testing from git project
STARTFILE=$(ls -1 $HELPDIR |grep -v '\.' |tail -n1)		# file with no dot is a top section of catalogue

_ () {
local lenstr=0 lenstr_=0 str='' lena color_changed
for a in $1 ; do
	lena=$(echo "$a" |wc -m)
	lenstr=$(echo "$str" |wc -m)
	lenstr_=$(( $lenstr + $lena ))
	if [ $lenstr_ -lt "$column_width" ] ; then
		str="${str}$a "
	else 
		echo -e "$str"
		str="$a "
	fi
done
echo -ne "$str"
if [ "$color" == "$def_color" ] ; then
		= $mark_color
		color_changed=yes
fi
if [ $(echo $2 |wc -m) -gt $((80 - "$column_width")) ] ; then
	echo ''
	lenstr=$(echo "$2" |wc -m)
	for i in $(seq $((80 - $lenstr))) ; do
		echo -n " "
	done
	echo -e  "$2"
else
	lenstr=$(echo "$str" |wc -m)
	for i in $(seq $(($column_width - $lenstr))) ; do
		echo -n "$separ"
	done
	echo -e "\t$2"
fi
[ "$color_changed" ] && = default
}

+ () {
local lenstr=0 lenstr_=0 str='' lena

for a in $1 ; do
	lena=$(echo $a |wc -m)
	lenstr=$(echo $str |wc -m)
	lenstr_=$(( $lenstr + $lena ))
	if [ $lenstr_ -lt 60 ] ; then
		str="${str} $a"
	else
		for i in $(seq $(( (80 - $lenstr) / 2 ))) ; do
			echo -n " "
		done
		echo "$str"
		str=$a
	fi
done
for i in $(seq $(( (80 - $(echo $str |wc -m)) / 2  ))) ; do
			echo -n " "
done
echo -e "$str"
}

	
find_help(){
	local pattern directsearch a block
	file="$STARTFILE"
	if ! [ "$1" ] ; then
		file=${HELPDIR}/$STARTFILE
		return 0
	fi
	pattern="^$(echo $@ |sed -e 's:\ :.\*\..*:g' -e 's/^/.*/' -e 's/$/.*/')$"
	directsearch=$(ls -1 $HELPDIR  |grep  "$pattern")
	if [ "$(echo $directsearch |wc -w)" -ne 1 ] ;then
		n=2
		echo -n "$STARTFILE"
		for a in $@ ; do
			unset block
			block=$(ls -1 $HELPDIR |grep $(basename $file) |awk -F. '{print $'$n'}' |$GREP $a |sort |uniq)
			if [ $(echo $block |wc -w) -eq 1 ] ; then
					file=${file}.$block
					echo -n " -> $block"
			elif [ $(echo $block |wc -w) -eq 0 ] ; then
				echo -e "\n\"$a\" $MSG02" >&2
				return 1
			else
				echo -e "\n\"$a\" - ${MSG01}:\n$block" >&2
				return 1
			fi
			n=$(( $n + 1))
		done
		echo ''
	else 	
		file=$directsearch
		echo $file |sed 's/\./ -> /g'
	fi
	file=${HELPDIR}/$file	
}

echo -e "${MSG03}: $(date +%A\ %e\ %b\ %Yr)"
echo -e \
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ $(date +%d.%m.%y) ■■■■■■
if find_help $@ ; then 
	source $file 2>/dev/null
echo -e \
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ ⌚$(date +%H:%M:%S) ■■■■■■
	subpart=$(ls -1 $HELPDIR |egrep $(basename $file)'\.[^\.]+*$' |sed 's/'$(basename $file).'//g')
	if [ -n "$subpart" ]  ;then
		echo -e "$MSG04 \"$(echo ${file} |sed -e 's:'${HELPDIR}/$STARTFILE'::' -e 's/^\.//')\":"
		echo $subpart |sed 's/\ /, /g'
		echo ''
	fi
else
	echo "Man:"
	man $1
fi

#!/bin/bash
GREP="grep -i" # default grep with a parameters to find help sections, it may be "agrep, egrep etc". 

black='\033[0;30m' 
red='\033[0;31m' 
green='\033[1;32m' 
yellow='\033[1;33m' 
brown='\033[0;33m'
blue='\033[0;34m' 
light_blue='\033[1;34m'
magenta='\033[1;35m'
cyan='\033[0;36m'
white='\033[0;37m' 
purple='\033[0;35m'
default='\033[0m'

mark_color=green    # color of second column
def_color=default   # default text color
separ=' '           # columns separator (space, '_', '.')
column_width=45	    # width of first column
header_width=60	    # header width

USELESS=yes

# add $PWD into $PATH for test runs of termhelper from local directory
. termhelper-functions || { echo "termhelper-functions not found!" && exit 1 ;}
_th_load_config
MSG01="$(_th_gettext -s "matches several subsections")"
MSG02="$(_th_gettext -s "not found")"
MSG03="$(_th_gettext -s "Hi! Today is")"
MSG04="$(_th_gettext -s "Subsections")"
MSG05="$(_th_gettext -s "Found in")"

= () { 
	color=$1
	eval echo -en "\$$color"
}
= default

if [ "$1" != '-' ] ; then
	prefix=$(echo $LANG |cut -f1 -d . |cut -f1 -d _)
	HELPDIR=/usr/share/termhelper/$prefix
	[ -d $HELPDIR ] || HELPDIR=/usr/share/termhelper/en
	[ -d ./helps/$prefix ] && HELPDIR=./helps/$prefix 		# for testing from git project
	STARTFILE=$(ls -1 $HELPDIR |grep -v '\.' |tail -n1)		# file with no dot is a top section of catalogue
fi

_ () {
local lenstr=0 lenstr_=0 str='' lena color_changed
for a in $1 ; do
	lenstr_=$(( ${#str} + ${#a} ))
	if [ $lenstr_ -lt "$column_width" ] ; then
		str="${str}$a "
	else
		echo -e "$str"
		str="$a "
	fi
done
echo -ne "$str"

if [ "$color" == "$def_color" ] ; then
		= $mark_color
		color_changed=yes
fi
if [ ${#2} -gt 80  ] ; then
	echo ''
	long "$2"
elif [ ${#2} -gt $((80 - "$column_width")) ] ; then
	echo ''
	printf '%'$((79 - ${#2}))'s'
	echo -e "$2"
else
	printf '%'$(($column_width - ${#str}))'s' | tr " " "$separ"
	echo -en "  "
	echo "$2"
fi
[ "$color_changed" ] && = default
}

long () {
    local lenstr=0 lenstr_=0 str=''
    set -o noglob
    for a in $@ ; do
	lenstr_=$(( ${#str} + ${#a} ))
	if [ $lenstr_ -lt "80" ] ; then
		str="${str}$a "
	else
		[ -z "$str" ] || echo $(echo "${str}" | sed 's/.\{80\}/&\n/g')'\'
		str="$a "
	fi
    done
    echo "$str" | sed 's/.\{80\}/&\n/g' 
}

++() {
	printf '%'$(( (80 - ${#1}) / 2  ))'s'
	echo -e "$1"
}

+ () {
    local lenstr=0 lenstr_=0 str='' lena
    set -o noglob
    for a in $@ ; do
	lenstr_=$(( ${#str} + ${#a} ))
	if [ $lenstr_ -lt 60 ] ; then
	    str="${str} $a"
	else
	    ++ "$str"
	    str=$a
	fi
    done
    ++ "$str"
}

find_help(){
	local pattern directsearch a block
	if [ "$1" == '%' ] ; then
		shift
		HIDE=yes
	elif [ "$1" == '!' ] ; then
		shift
		USELESS=no
	fi
	file="$STARTFILE"
	if ! [ "$1" ] ; then
		file=${HELPDIR}/$STARTFILE
		return 0
	fi
	pattern="${STARTFILE}$(echo $@ |sed -e 's:\ :.:g' -e 's/^/.*/')"
	directsearch=$(ls -1 $HELPDIR  |grep  "$pattern")
	if [ "$(echo $directsearch |wc -w)" -ne 1 ] ;then
		n=2
		[ "$HIDE" ] || echo -n "$STARTFILE"
		for a in $@ ; do
			unset block
			block=$(ls -1 $HELPDIR |grep $(basename $file) |awk -F. '{print $'$n'}' |$GREP $a |sort |uniq)
			if [ $(echo $block |wc -w) -eq 1 ] ; then
					file=${file}.$block
					echo -n " -> $block"
			elif [ $(echo $block |wc -w) -eq 0 ] ; then
				echo -e "\n\"$a\" $MSG02" >&2
				return 1
			else
				echo -e "\n\"$a\" - ${MSG01}:\n$block" >&2
				return 1
			fi
			n=$(( $n + 1))
		done
		echo ''
	else
		file=$directsearch
		[ "$HIDE" ] || echo $file |sed 's/\./ -> /g'
	fi
	file=${HELPDIR}/$file
}


search() {
	= brown
	+ ${MSG05}:
	= default
	grep -r  "$1" "$HELPDIR" |sed -e 's#'"${HELPDIR}/"'##' 	-e 's/:/ /' \
	| cut -f1 -d ' ' |sort -u |sed 's/\./ /g' 
}

#echo -e "${MSG03}: $(date +%A\ %e\ %b\ %Yr)"
[ "$1" != '%' ] && echo -e \
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ $(date +%d.%m.%y) ■■■■■■■■
if [ "$1" == '-' ] ; then
	shift ; break=yes
	echo "$@" >&2
	= green
	while read str; do
		echo -e "$str" >&2
	done
	= default
elif [ "$1" == '?' ] ; then
	shift ; break=yes
	search "$@"
elif find_help $@ ; then 
    if [ $USELESS != 'yes' ] ;then
		source $file 2>/dev/null | less -FEXI 
    else
		source $file 2>/dev/null
    fi
fi
[ "$1" != '%' ] && echo -e \
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■⌚ ️$(date +%H:%M:%S) ■■■■■■■■
[ "$break" ] && exit

subpart=$(ls -1 $HELPDIR |egrep $(basename $file)'\.[^\.]+*$' |sed 's/'$(basename $file).'//g')
if [ -n "$subpart" ]  ;then
			echo -e "$MSG04 \"$(echo ${file} |sed -e 's:'${HELPDIR}/$STARTFILE'::' -e 's/^\.//')\":"
			long $subpart
			echo ''
fi

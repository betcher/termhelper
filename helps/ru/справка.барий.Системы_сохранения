long "Большая часть особых свойств, что отличают ОС Барий от других дистрибутивов росы, собранных на той же пакетной базе, заложены в [[Barium:UIRD]]."
+
= green ; echo -n 'UIRD это init ram disk (initrd) ' ; = default ; long ' собираемый с использованием dracut, но кардинально отличающийся сценарием загрузки ОС. Предназначен'
long "для загрузки модульных дистрибутивов. В настоящее время используется в MagOS, Барии, ublinux, MOS-flash доступен как дополнительный initrd в дистрибутивах puppyrus."
long "А значит описанное далее в целом справедливо и для них."
+
long "Именно UIRD отвечает за то как будут сохраняться ваши данные."
+
+  Немного теории 
+
long "Модульными дистрибутивами называются сборки где корневая ФС линукс собирается на этапе initrd из слоев. Каждый из слоев содержит свою часть файлов.  "
long "В качестве слоя может быть все что возможно смонтировать в линукс: раздел, папка, iso, img. Но чаще всего это squashfs архивы это и есть модули. "
long "Все эти слои объединяются с пощью aufs/overlayfs в один каталог, который и будет корнем "/" для дальнейшей загрузки дистрибутива. "
long "Все эти слои монтируются read only, кроме последнего, верхнего слоя. Еще немного и будет понятного к чему вся эта предыстория."
long "Итак. Система загружена, модули RO. А что будет если добавить в систему файл или изменить существующий? Все эти изменения фиксируются в последнем слое,"
long "который мы называем changes. При удалении существующего файла, в changes будет оставлена метка (тень или whiteout), и объединяющая модули ФС будет считать"
long "что этого файла нет. А что может быть смонтировано в верхний слой? Опять же все что можно смонтировать в Линукс с возможностью записи. "
+
long "В UIRD способ работы с верхним слоем, то есть иначе говоря способ сохранения данных между перезагрузками, управляется параметром uird.mode. Доступно 4 варианта:"
+
+  uird.mode=clean 
+
long "Если смонтировать в верхний слой aufs каталог в tmpfs, то все изменения будут храниться в ОЗУ и после выключения исчезнут. Это называем - "чистый режим", в большинстве конфигураций это состояние по умолчанию."
+
+  uird.mode=changes 
+
long "Если смонтировать туда папку на диске или по сети (не принципиально), или файл-образ , то данные будут сохраняться после перезагрузки. Таких папок или файлов может"
long "быть несколько, с разным набором установленного софта и настройками. Эти папки или файлы-образы мы называем - профилями. Такой режим используется "
long "по умолчанию в MagOS. Кроме uird.mode=changes вам нужно указать где находится файл или папка для сохранений  uird.chages=/куда/писать "
long "(способы указания путей смотрите в [[Barium:UIRD]]) "
+
+  uird.mode=clear 
+
long "Гибридный режиме между clean и changes, слой подключается как для changes, но перед подключением зачищается. То есть для пользователя выглядит как clean, "
long "но не задействует ОЗУ для хранения изменений во время работы системы."
+
+  uird.mode=toxzm 
+
long "Режим добавляющий к режиму clean возможность сохранения. Во время работы изменения пишутся в папку в ОЗУ, (для Бария это блочное устройство zram со сжатием)."
long "При выключении машины эти изменения пакуются в модули. Для включения режима кроме uird.mode=toxzm нужно передать путь к файлу с настройками режима "
= green ; echo -n 'uird.changes=/где/конфиг.cfg ' ; = default ; long ' и  ' ; = default ; long 'uird.shutdown ' ; = default ; long '.'
+
long "Режим имеет возможность очень тонкой настройки сохранений, можно указать для любого файла или папки нужно ли сохранять и в какой модуль."
long "Для каждого модуля в конфигурационном файле который указываете в uird.changes для этого режима есть отдельная секция состоящая из нескольких параметров."
long "Название параметра завершается индексом, именно по индексу определяется принадлежность параметра секции. Цифровые индексы должны идти по порядку, "
long "в этом порядке модули подключаются при старте."
+
  = green ; echo -n 'XZM ' ; = default ; long ' - имя модуля, если оставить пустым то будет сгенерировано по характеристикам железа, то есть модуль будет иметь свое имя на каждой машине'
  = green ; echo -n 'MODE ' ; = default ; long ' - режим подключения модуля при загрузке, варианты: copy, mount, mount+wh.'
  = green ; echo -n 'REBULID ' ; = default ; long ' - нужно ли пересобрать модуль при выключении машины, варианты: yes, no, once'
  = green ; echo -n 'ADDFILTER ' ; = default ; long ' - фильтры (grep) для получения списка файлов и каталогов, которые нужно сохранить в модуль'
  = green ; echo -n 'DROPFILTER ' ; = default ; long ' - фильтры для исключения файлов и каталогов из списка полученного после ADDFILTER'
  = green ; echo -n 'SQFSOPT ' ; = default ; long ' - опции для mksquashfs, обычно это алгоритм сжатия и размер блока'
  = green ; echo -n 'MAXCOPYSIZE ' ; = default ; long ' - Максимальный размер разрешенный для модуля, после чего параметр MODE модуля будет переведен в 'mount', REBUILD в 'no' и создана новая секция с MODE=copy и REBUILD=yes'
+
= green ; echo -n 'Далее на примере конфигурационного файла из бария: ' ; = default ; long 
+
= brown ; echo -n 'Для удобства списки можно заносить в переменные ' ; = default ; long 
long "    "
long "    GARBAGE="/var/log /var/spool /var/tmp /var/cache""
long "    PAM="/etc/pam.d /etc/pam_pkcs11 /etc/pki /xdg/autostart/""
+
= brown ; echo -n 'Сохраняем домашние каталоги пользователей в модуль homes.xzm ' ; = default ; long 
+
long "    XZM0="homes.xzm""
long "    MODE0="copy""
long "    REBUILD0="no""
long "    ADDFILTER0="/home""
long "    DROPFILTER0="""
long "    SQFSOPT0='-comp lz4 -b 512k'"
long "    MAXCOPYSIZE0=300"
+
= brown ; echo -n 'Системные изменения сохраняем в свой модуль для каждой машины. ' ; = default ; long 
= brown ; echo -n '(если имя для модуля не указано, оно генерируется на основе железа) ' ; = default ; long 
+
long "    XZM1="""
long "    MODE1="mount""
long "    REBUILD1="no""
long "    ADDFILTER1="""
long "    DROPFILTER1="\$GARBAGE /home " "
long "    SQFSOPT1="-comp lz4 -b 512k""
long "    MAXCOPYSIZE1="""
+
= brown ; echo -n 'Примеры с отключенной пересборкой ' ; = default ; long 
+
long "    XZMpam='pam.xzm'"
long "    MODEpam='copy'"
long "    REBUILDpam='no'"
long "    ADDFILTERpam="\$PAM""
long "    DROPFILTERpam="""
long "    SQFSOPTpam='-comp xz -b 512k'"
long "    MAXCOPYSIZEpam="""
+
= brown ; echo -n 'Контрольные суммы cts ' ; = default ; long 
+
long "    XZMcts='cts.xzm'"
long "    MODEcts='copy'"
long "    REBUILDcts='no'"
long "    ADDFILTERcts="/etc/cts /etc/prelink.conf.d/cts.conf""
long "    DROPFILTERcts="""
long "    SQFSOPTcts='-comp xz -b 512k'"
long "    MAXCOPYSIZEcts="""
+
+  uird.mounts и uird.home 
+
long "От части к способам сохранений имеют отношения еще и эти два параметра, позволяющие объединить, например, сохранение части изменений в каталог, а другой части в модуль."
+
+  uird.mounts 
+
long "Параметр используется в трех случаях. "
long "* для того, чтобы разгрузить запись в uird.from при сложном вложенном монтировании. Например iso в сети по http, внутри которого файл со squashfs, внутри которого файл с ext3 (стандартная конфигурация для современных исо)"
long "* чтобы организовать автомонтирование раздела для пользователя"
long "* чтобы сделать бинд (mount -o bind) каталога на носителе внутрь системы, а это как раз интересующий нас в контексте темы случай."
long "Например запись:"
+
long "    uird.mounts=/my_WWW::MNT=/var/www::MNTOPTS=noexec+rw::FORCE=yes::INIT=yes"
+
long "Означает найти в корне доступных на момент загрузки разделов каталог /my_WWW. Найденный каталог будет смонтирован в /.memory/mounts/0 с параметрами noexec,rw, а /var/WWW будет биндом на эту папку."
long "FORCE=yes означает не прерывать загрузку если каталог /my_WWW не будет найден, а INIT=yes означает в случае если каталог пуст скопировать туда все что есть в модулях в /var/www, то есть как бы инициализировать."
+
+  uird.home 
+
long "По сути подмножество uird-mounts для конкретного каталога /home"
+
long "    uird.home=/dev/sda1/homes"
+
long "[[Категория:Barium]]"

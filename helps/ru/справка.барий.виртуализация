+  Запуск Бария в виртуальных машинах 
long "Сборки Бария распространяются архивами tar.gz и в формате iso. Второй вполне подходит для запуска в виртуальных машинах, но речь здесь пойдет о другом."
long "simple-install, это скрипт, который используется для установки Бария, не такой уж и simple, как оказалось :), и может быть использован для генерации готового образа для виртуальной машины. "
long "С разделом для хранения данных, с шифрованием, свопом, блэкджеком и проч. На момент написания статьи поддерживается создание образов в формате qcow2 и "сырых" образов img."
long "simple-install содержит готовый конфиг для образов виртуальных машин, но можно задать все необходимые параметры вручную. Рассмотрим оба варианта. Для такой сборки дополнительно к "
long "обычному списку пакетов для simple-install в системе понадобится пакет qemu-img (точнее исполняемые qemu-img, qemu-nbd в системах отличных от Росы имена пакетов могут отличаться)."
+
+  Сборка по готовому шаблону. 
+
    = green ; echo -n 'simple-install --qimage 10000 -t virt -p 123qwe ' ; = default ; long 
+
long "здесь: "
+
    = green ; echo -n '--qimage 10000 ' ; = default ; long ' - установка в образ qcow2 размером 10000M (образ динамический,реально займет пару гигабайт)'
    = green ; echo -n '-t virt ' ; = default ; long ' - использовать встроенный шаблон virt '
    = green ; echo -n '-p 123qwe ' ; = default ; long ' - пароль для раздела luks'
+
+  Сборка по шаблону с изменениями. 
+
    = green ; echo -n 'simple-install --qimage 10000 -t virt ROSA-DATA=3:x:ext4 --flags overlay ' ; = default ; long 
+
long "здесь: "
long "    "
    = green ; echo -n 'ROSA-DATA=3:x:ext4 ' ; = default ; long ' - задает параметры для третьего раздела с ROSA-DATA, а именно ext4 вместо luks по этому пароль задавать не нужно.'
    = green ; echo -n '--flags overlay ' ; = default ; long ' - заменить список флагов (файлы маркеры для конфига grub2) на свой, по дефолту для -t virt там есть флаг luks'
+
+  Сборка со своими значениями 
+
long "    simple-install --qimage 10000 -t none boot=1:100:vfat ROSA-SYSTEM=2:8000:ext3 ROSA-DATA=2 SWAP=3:x:swap --flags aufs"
+
long "здесь:"
+
    = green ; echo -n '-t none ' ; = default ; long ' - не использовать шаблон'
long " "
+  Для запуска такого образа с qemu нужны приблизительно такие параметры: 
+
long " qemu-system-x86_64  -boot c  -enable-kvm  -name "BARIUM"  -smp 2  -m 3G  -vga std  -rtc base=localtime      -hda ./OS.img"
+
+  При установке в virt-manager: 
+
long "    - выбираем "Импорт образа диска", "
long "    - добавляем папку с образом как хранилище, выбираем наш образ, "
long "    - тип "generic linux 2020", "
long "    - Память, процессоры и прочие настройки - по желанию"
+
= green ; echo -n 'Установка завершена ' ; = default ; long 
= green ; echo -n 'записываем в Rosa.ini явки, пароли и можно пользоваться ' ; = default ; long 
+
+  PXE загрузка 
+
long "Можно пойти дальше и сделать так чтобы с Бария, установленного выше описанным способом, загружалось по PXE нужное количество виртуальных машин, которые могут даже не иметь своего виртуального диска."
long "Для такой загрузки подготовлен специальный модуль, в котором есть необходимый софт и минимальные настройки. Далее описывается последовательность действий на примере virt-manager."
+
long "* Создаем образ для загрузки Бария, который будет нашим PXE, NFS, DHCP сервером в локальной, для виртуальных машин, сети. Далее Сервер. "
long "Чтобы не иметь проблем с указанием источника содержащего ROSA-DATA, устанавливаем барий на три раздела."
+
long "* Загружаем образ. Переходим в консоли в папку /.memory/layer-base/1/modules и"
long "    "
    = green ; echo -n 'barium getmod pxeboot.xzm ' ; = default ; long ' '
+
long "* В файле /.memory/layer-base/1/Rosa.ini раскомментируем:"
+
    = green ; echo -n 'ROUTER=yes ' ; = default ; long 
+
long "Выключаем виртуальную машину. Модуль у нас есть, переходим к настройкам virt-manager:"
+
long "* Главное окно Virt-manager. Переходим к вкладке: Правка - Свойства подключения - Виртуальные сети"
+
long "* Жмем плюс. Название: любое например pxe, Режим: Изолированный, Все остальные галки нужно убрать"
+
long "* В главном окне virt-manager жмем по иконке нашего Сервера, откроется окно, не запуская переходим к настройкам (голубой флажок в панели)"
+
long "* Удаляем все сетевые устройства. Скорее всего там одно дефолтное с NAТ."
+
long "* Жмем плюс, выбираем новое сетевое устройство. В пункте "Создать на базе" выбираем ранее созданную сеть "pxe""
+
long "* Аналогично добавляем еще одно сетевое устройство, только на этот раз с NAT."
+
long "Сервер готов, можно загрузить."
+
long "Переходим к клиентам."
+
long "* Главное окно virt-manager. Создать новую виртуальную машину. Установка вручную. Тип машины Generic Linux 2020. Память и процессоры по желанию."
+
long "* В настройках хранилища убираем галку с создания и не выбираем готовых образов (потом добавим если нужно)"
long " "
long "* В последнем меню нужно поставить галку в графе "проверить конфигурацию перед установкой""
+
long "* В меню настроек нужно также удалить сетевое устройство по умолчанию и добавить наше "pxe". Второе сетевое устройство здесь не понадобится."
+
long "* Там же в меню настроек выбрать "Загрузка" и поставить галочку напротив нашей сети"
+
long "Готово. Можно грузить."
+
long "Таких виртуальных машин можно запустить столько сколько позволит ваше ОЗУ."
+
long "Чтобы такие машины могли сохранять данные при работе можно подключать к ним образы qcow2. Готовый образ для данных можно генерировать также как и основной с simple-install"
+
    = green ; echo -n 'simple-install --qimage 4000 -t none ROSA-DATA=1:3000:ext4 SWAP=2:x:swap ' ; = default ; long 
+
long "Такой образ подключается к каждой машине отдельно и хранит только изменения сделанные во время работы системы."
+
long "Либо данные могут писаться по nfs на Сервер, в пунктах загрузки есть пример где так подключается /home. "
+
+  Запуск ОС из распакованного архива 
+
= brown ; echo -n 'доступен только в коммерческой версии ' ; = default ; long 
+
long "* Распаковываем tar.gz архив со сборкой в папку под ОС linux"
long "* Проверяем наличие в системе qemu-system-x86_64, при отсутствии останавливаем qemu"
long "* Переходим в папку куда распакован Барий"
long "* Запускаем"
+
    = green ; echo -n './qemurun ' ; = default ; long 
long "* Способ позволяет установить ОС на токен без создания установочной флешки, для этого передаем скрипту файл устройства носителя (токена)"
+
   = green ; echo -n './qemurun /dev/sda ' ; = default ; long 
+
long "* Далее аналогично установке с флешки, то есть запускаем графический инсталлятор, заполняем поля с явками и паролями и жмем "Выполнить""
+
long "[[Категория:Barium]]"
